name: Docker Build, Push Images

on:
  release:
    types: [published]
env:
  RELEASE: ${{ github.event.release.tag_name || 'latest' }}

jobs:
  build-base-images:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and tag dish pash base image
        run: |
          cd docker-hadoop

          docker build -t ${{ secrets.DOCKER_USERNAME }}/dish-pash-base:${{ env.RELEASE }} ./pash-base \
          --build-arg RELEASE=${{ env.RELEASE }}

          # Tag the image with 'latest'
          docker tag ${{ secrets.DOCKER_USERNAME }}/dish-pash-base:${{ env.RELEASE }} \
          ${{ secrets.DOCKER_USERNAME }}/dish-pash-base:latest

      - name: Push dish pash base image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/dish-pash-base:${{ env.RELEASE }}
          docker push ${{ secrets.DOCKER_USERNAME }}/dish-pash-base:latest

      - name: Build and tag hadoop pash base image
        run: |
          cd docker-hadoop

          docker build -t ${{ secrets.DOCKER_USERNAME }}/hadoop-pash-base:${{ env.RELEASE }} ./base \
          --build-arg RELEASE=${{ env.RELEASE }} --build-arg BASE=${{ secrets.DOCKER_USERNAME }}/dish-pash-base

          # Tag the image with 'latest'
          docker tag ${{ secrets.DOCKER_USERNAME }}/hadoop-pash-base:${{ env.RELEASE }} \
          ${{ secrets.DOCKER_USERNAME }}/hadoop-pash-base:latest

      - name: Push hadoop pash base image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/hadoop-pash-base:${{ env.RELEASE }}
          docker push ${{ secrets.DOCKER_USERNAME }}/hadoop-pash-base:latest

  build-dependant-images:
    runs-on: ubuntu-latest
    needs: build-base-images

    strategy:
      matrix:
        image:
          - name: hadoop-namenode
            path: ./namenode
            base_image: hadoop-pash-base

          - name: hadoop-datanode
            path: ./datanode
            base_image: hadoop-pash-base

          - name: hadoop-resourcemanager
            path: ./resourcemanager
            base_image: hadoop-pash-base

          - name: hadoop-nodemanager
            path: ./nodemanager
            base_image: hadoop-pash-base

          - name: hadoop-historyserver
            path: ./historyserver
            base_image: hadoop-pash-base

          - name: hadoop-submit
            path: ./submit
            base_image: hadoop-pash-base

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and tag Docker image
        run: |
          cd docker-hadoop

          # Build Image
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ matrix.image.name }}:${{ env.RELEASE }} ${{ matrix.image.path }} \
          --build-arg RELEASE=${{ env.RELEASE }} --build-arg BASE=${{ secrets.DOCKER_USERNAME }}/${{ matrix.image.base_image }}
          # Tag the image with 'latest'
          docker tag ${{ secrets.DOCKER_USERNAME }}/${{ matrix.image.name }}:${{ env.RELEASE }} ${{ secrets.DOCKER_USERNAME }}/${{ matrix.image.name }}:latest
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ matrix.image.name }}:${{ env.RELEASE }}
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ matrix.image.name }}:latest

  canary-test:
    runs-on: ubuntu-latest
    needs: build-dependant-images

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Run Containers
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          RELEASE: ${{ github.event.release.tag_name || 'latest' }}
        run: |
          cd docker-hadoop
          chmod +x ./setup-compose.sh
          ./setup-compose.sh

          # Wait for namenode to be ready
          echo "Waiting for namenode to be ready..."
          max_attempts=10
          attempt_num=1
          until docker exec namenode curl -sf http://localhost:9870 || [ "$attempt_num" -gt "$max_attempts" ]; do
              echo "namenode is not ready yet. Retrying in 5 seconds..."
              sleep 5
              attempt_num=$((attempt_num + 1))
          done

          if [ "$attempt_num" -le "$max_attempts" ]; then
              echo "namenode is ready. Proceeding with test commands."
          else
              echo "namenode did not become ready in time."
              exit 1
          fi

      - name: Run tests
        run: |
          # Run the commands now that namenode is ready
          docker exec nodemanager1 /bin/sh -c "cd \$DISH_TOP && hdfs dfs -put README.md /README.md"
          docker exec nodemanager1 /bin/sh -c "cd \$DISH_TOP && ./di.sh ./scripts/sample.sh"
